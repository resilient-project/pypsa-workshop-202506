Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
n.statistics()
------------------


[31m---------------------------------------------------------------------------[39m
[31mTypeError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[35][39m[32m, line 1[39m
[32m----> [39m[32m1[39m [43mn[49m[43m.[49m[43mstatistics[49m[43m([49m[43m)[49m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pypsa/statistics/expressions.py:356[39m, in [36mStatisticsAccessor.__call__[39m[34m(self, comps, aggregate_groups, aggregate_across_components, groupby, at_port, carrier, bus_carrier, nice_names, drop_zero, round, aggregate_time)[39m
[32m    354[39m res = {}
[32m    355[39m [38;5;28;01mfor[39;00m func [38;5;129;01min[39;00m funcs:
[32m--> [39m[32m356[39m     df = [43mfunc[49m[43m([49m
[32m    357[39m [43m        [49m[43mcomps[49m[43m=[49m[43mcomps[49m[43m,[49m
[32m    358[39m [43m        [49m[43maggregate_groups[49m[43m=[49m[43maggregate_groups[49m[43m,[49m
[32m    359[39m [43m        [49m[43maggregate_across_components[49m[43m=[49m[43maggregate_across_components[49m[43m,[49m
[32m    360[39m [43m        [49m[43mgroupby[49m[43m=[49m[43mgroupby[49m[43m,[49m
[32m    361[39m [43m        [49m[43mat_port[49m[43m=[49m[43mat_port[49m[43m,[49m
[32m    362[39m [43m        [49m[43mcarrier[49m[43m=[49m[43mcarrier[49m[43m,[49m
[32m    363[39m [43m        [49m[43mbus_carrier[49m[43m=[49m[43mbus_carrier[49m[43m,[49m
[32m    364[39m [43m        [49m[43mnice_names[49m[43m=[49m[43mnice_names[49m[43m,[49m
[32m    365[39m [43m        [49m[43mdrop_zero[49m[43m=[49m[43mdrop_zero[49m[43m,[49m
[32m    366[39m [43m        [49m[38;5;28;43mround[39;49m[43m=[49m[38;5;28;43mround[39;49m[43m,[49m
[32m    367[39m [43m    [49m[43m)[49m
[32m    368[39m     res[df.attrs[[33m"[39m[33mname[39m[33m"[39m]] = df
[32m    369[39m index = pd.Index([38;5;28mset[39m.union(*[[38;5;28mset[39m(df.index) [38;5;28;01mfor[39;00m df [38;5;129;01min[39;00m res.values()]))

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pypsa/statistics/expressions.py:140[39m, in [36mStatisticHandler.__call__[39m[34m(self, *args, **kwargs)[39m
[32m    139[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m__call__[39m([38;5;28mself[39m, *args: Any, **kwargs: Any) -> pd.DataFrame:  [38;5;66;03m# noqa: D102[39;00m
[32m--> [39m[32m140[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_bound_method[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pypsa/statistics/expressions.py:1430[39m, in [36mStatisticsAccessor.transmission[39m[34m(self, comps, aggregate_time, aggregate_groups, aggregate_across_components, groupby, at_port, carrier, bus_carrier, nice_names, drop_zero, round)[39m
[32m   1427[39m     weights = get_weightings(n, c)
[32m   1428[39m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m._aggregate_timeseries(p, weights, agg=aggregate_time)
[32m-> [39m[32m1430[39m df = [38;5;28;43mself[39;49m[43m.[49m[43m_aggregate_components[49m[43m([49m
[32m   1431[39m [43m    [49m[43mfunc[49m[43m,[49m
[32m   1432[39m [43m    [49m[43mcomps[49m[43m=[49m[43mcomps[49m[43m,[49m
[32m   1433[39m [43m    [49m[43magg[49m[43m=[49m[43maggregate_groups[49m[43m,[49m
[32m   1434[39m [43m    [49m[43maggregate_across_components[49m[43m=[49m[43maggregate_across_components[49m[43m,[49m
[32m   1435[39m [43m    [49m[43mgroupby[49m[43m=[49m[43mgroupby[49m[43m,[49m
[32m   1436[39m [43m    [49m[43mat_port[49m[43m=[49m[43mat_port[49m[43m,[49m
[32m   1437[39m [43m    [49m[43mcarrier[49m[43m=[49m[43mcarrier[49m[43m,[49m
[32m   1438[39m [43m    [49m[43mbus_carrier[49m[43m=[49m[43mbus_carrier[49m[43m,[49m
[32m   1439[39m [43m    [49m[43mnice_names[49m[43m=[49m[43mnice_names[49m[43m,[49m
[32m   1440[39m [43m    [49m[43mdrop_zero[49m[43m=[49m[43mdrop_zero[49m[43m,[49m
[32m   1441[39m [43m    [49m[38;5;28;43mround[39;49m[43m=[49m[38;5;28;43mround[39;49m[43m,[49m
[32m   1442[39m [43m[49m[43m)[49m
[32m   1443[39m df.attrs[[33m"[39m[33mname[39m[33m"[39m] = [33m"[39m[33mTransmission[39m[33m"[39m
[32m   1444[39m df.attrs[[33m"[39m[33munit[39m[33m"[39m] = [33m"[39m[33mcarrier dependent[39m[33m"[39m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pypsa/statistics/abstract.py:283[39m, in [36mAbstractStatisticsAccessor._aggregate_components[39m[34m(self, func, agg, comps, groupby, aggregate_across_components, at_port, bus_carrier, carrier, nice_names, drop_zero, round)[39m
[32m    281[39m     d[c] = df
[32m    282[39m df = [38;5;28mself[39m._aggregate_components_concat_data(d, is_one_component)
[32m--> [39m[32m283[39m df = [38;5;28;43mself[39;49m[43m.[49m[43m_apply_option_kwargs[49m[43m([49m
[32m    284[39m [43m    [49m[43mdf[49m[43m,[49m
[32m    285[39m [43m    [49m[43mdrop_zero[49m[43m=[49m[43mdrop_zero[49m[43m,[49m
[32m    286[39m [43m    [49m[38;5;28;43mround[39;49m[43m=[49m[38;5;28;43mround[39;49m[43m,[49m
[32m    287[39m [43m    [49m[43mnice_names[49m[43m=[49m[43mnice_names[49m[43m,[49m[43m  [49m[38;5;66;43;03m# TODO: nice_names does not have effect here[39;49;00m
[32m    288[39m [43m[49m[43m)[49m
[32m    290[39m [38;5;28;01mif[39;00m aggregate_across_components:
[32m    291[39m     df = [38;5;28mself[39m._aggregate_across_components(df, agg)

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pypsa/statistics/expressions.py:247[39m, in [36mStatisticsAccessor._apply_option_kwargs[39m[34m(self, df, nice_names, drop_zero, round)[39m
[32m    243[39m drop_zero_ = (
[32m    244[39m     options.params.statistics.drop_zero [38;5;28;01mif[39;00m drop_zero [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m drop_zero
[32m    245[39m )
[32m    246[39m [38;5;28;01mif[39;00m round_ [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m--> [39m[32m247[39m     df = [43mdf[49m[43m.[49m[43mround[49m[43m([49m[43mround_[49m[43m)[49m
[32m    248[39m [38;5;28;01mif[39;00m drop_zero_ [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    249[39m     df = df[df != [32m0[39m]

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pandas/core/series.py:2818[39m, in [36mSeries.round[39m[34m(self, decimals, *args, **kwargs)[39m
[32m   2816[39m nv.validate_round(args, kwargs)
[32m   2817[39m [38;5;28;01mif[39;00m [38;5;28mself[39m.dtype == [33m"[39m[33mobject[39m[33m"[39m:
[32m-> [39m[32m2818[39m     [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m([33m"[39m[33mExpected numeric dtype, got object instead.[39m[33m"[39m)
[32m   2819[39m new_mgr = [38;5;28mself[39m._mgr.round(decimals=decimals, using_cow=using_copy_on_write())
[32m   2820[39m [38;5;28;01mreturn[39;00m [38;5;28mself[39m._constructor_from_mgr(new_mgr, axes=new_mgr.axes).__finalize__(
[32m   2821[39m     [38;5;28mself[39m, method=[33m"[39m[33mround[39m[33m"[39m
[32m   2822[39m )

[31mTypeError[39m: Expected numeric dtype, got object instead.

