Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# set objective expression to the problem
n.model.objective.expression = (
    n.model["Generator-p"].loc[:, "gas"] * n.generators.marginal_cost.loc["gas"]
    + n.model["Generator-p"].loc[:, "nuclear"]
    * n.generators.marginal_cost.loc["nuclear"]
)
------------------


[31m---------------------------------------------------------------------------[39m
[31mValueError[39m                                Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[25][39m[32m, line 3[39m
[32m      1[39m [38;5;66;03m# set objective expression to the problem[39;00m
[32m      2[39m n.model.objective.expression = (
[32m----> [39m[32m3[39m     [43mn[49m[43m.[49m[43mmodel[49m[43m[[49m[33;43m"[39;49m[33;43mGenerator-p[39;49m[33;43m"[39;49m[43m][49m[43m.[49m[43mloc[49m[43m[[49m[43m:[49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mgas[39;49m[33;43m"[39;49m[43m][49m[43m [49m[43m*[49m[43m [49m[43mn[49m[43m.[49m[43mgenerators[49m[43m.[49m[43mmarginal_cost[49m[43m.[49m[43mloc[49m[43m[[49m[33;43m"[39;49m[33;43mgas[39;49m[33;43m"[39;49m[43m][49m
[32m      4[39m     + n.model[[33m"[39m[33mGenerator-p[39m[33m"[39m].loc[:, [33m"[39m[33mnuclear[39m[33m"[39m]
[32m      5[39m     * n.generators.marginal_cost.loc[[33m"[39m[33mnuclear[39m[33m"[39m]
[32m      6[39m )

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/linopy/variables.py:396[39m, in [36mVariable.__mul__[39m[34m(self, other)[39m
[32m    391[39m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(
[32m    392[39m         other, (expressions.LinearExpression, Variable, ScalarVariable)
[32m    393[39m     ):
[32m    394[39m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m.to_linexpr() * other
[32m--> [39m[32m396[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mto_linexpr[49m[43m([49m[43mother[49m[43m)[49m
[32m    397[39m [38;5;28;01mexcept[39;00m [38;5;167;01mTypeError[39;00m:
[32m    398[39m     [38;5;28;01mreturn[39;00m [38;5;28mNotImplemented[39m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/linopy/variables.py:316[39m, in [36mVariable.to_linexpr[39m[34m(self, coefficient)[39m
[32m    293[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mto_linexpr[39m(
[32m    294[39m     [38;5;28mself[39m,
[32m    295[39m     coefficient: [38;5;28mint[39m
[32m   (...)[39m[32m    300[39m     | DataArray = [32m1[39m,
[32m    301[39m ) -> expressions.LinearExpression:
[32m    302[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m    303[39m [33;03m    Create a linear expression from the variables.[39;00m
[32m    304[39m 
[32m   (...)[39m[32m    314[39m [33;03m        Linear expression with the variables and coefficients.[39;00m
[32m    315[39m [33;03m    """[39;00m
[32m--> [39m[32m316[39m     coefficient = [43mas_dataarray[49m[43m([49m[43mcoefficient[49m[43m,[49m[43m [49m[43mcoords[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43mcoords[49m[43m,[49m[43m [49m[43mdims[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43mdims[49m[43m)[49m
[32m    317[39m     ds = Dataset({[33m"[39m[33mcoeffs[39m[33m"[39m: coefficient, [33m"[39m[33mvars[39m[33m"[39m: [38;5;28mself[39m.labels}).expand_dims(
[32m    318[39m         TERM_DIM, -[32m1[39m
[32m    319[39m     )
[32m    320[39m     [38;5;28;01mreturn[39;00m expressions.LinearExpression(ds, [38;5;28mself[39m.model)

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/linopy/common.py:258[39m, in [36mas_dataarray[39m[34m(arr, coords, dims, **kwargs)[39m
[32m    256[39m     arr = numpy_to_dataarray(arr, coords=coords, dims=dims, **kwargs)
[32m    257[39m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(arr, (np.number, [38;5;28mint[39m, [38;5;28mfloat[39m, [38;5;28mstr[39m, [38;5;28mbool[39m, [38;5;28mlist[39m)):
[32m--> [39m[32m258[39m     arr = [43mDataArray[49m[43m([49m[43marr[49m[43m,[49m[43m [49m[43mcoords[49m[43m=[49m[43mcoords[49m[43m,[49m[43m [49m[43mdims[49m[43m=[49m[43mdims[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m    260[39m [38;5;28;01melif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(arr, DataArray):
[32m    261[39m     supported_types = [
[32m    262[39m         np.number,
[32m    263[39m         [38;5;28mstr[39m,
[32m   (...)[39m[32m    269[39m         DataArray,
[32m    270[39m     ]

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/xarray/core/dataarray.py:461[39m, in [36mDataArray.__init__[39m[34m(self, data, coords, dims, name, attrs, indexes, fastpath)[39m
[32m    459[39m data = _check_data_shape(data, coords, dims)
[32m    460[39m data = as_compatible_data(data)
[32m--> [39m[32m461[39m coords, dims = [43m_infer_coords_and_dims[49m[43m([49m[43mdata[49m[43m.[49m[43mshape[49m[43m,[49m[43m [49m[43mcoords[49m[43m,[49m[43m [49m[43mdims[49m[43m)[49m
[32m    462[39m variable = Variable(dims, data, attrs, fastpath=[38;5;28;01mTrue[39;00m)
[32m    464[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(coords, Coordinates):

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/xarray/core/dataarray.py:166[39m, in [36m_infer_coords_and_dims[39m[34m(shape, coords, dims)[39m
[32m    164[39m dims_tuple = [38;5;28mtuple[39m(dims)
[32m    165[39m [38;5;28;01mif[39;00m [38;5;28mlen[39m(dims_tuple) != [38;5;28mlen[39m(shape):
[32m--> [39m[32m166[39m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[32m    167[39m         [33m"[39m[33mdifferent number of dimensions on data [39m[33m"[39m
[32m    168[39m         [33mf[39m[33m"[39m[33mand dims: [39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(shape)[38;5;132;01m}[39;00m[33m vs [39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(dims_tuple)[38;5;132;01m}[39;00m[33m"[39m
[32m    169[39m     )
[32m    170[39m [38;5;28;01mfor[39;00m d [38;5;129;01min[39;00m dims_tuple:
[32m    171[39m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m hashable(d):

[31mValueError[39m: different number of dimensions on data and dims: 0 vs 1

